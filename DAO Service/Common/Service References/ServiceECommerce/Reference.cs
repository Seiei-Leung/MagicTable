//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1008
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.ServiceECommerce {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceECommerce.IECommerceServiceMgr", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IECommerceServiceMgr {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceServiceMgr/StartSession", ReplyAction="http://tempuri.org/IECommerceServiceMgr/StartSessionResponse")]
        bool StartSession(string userCode, string IP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceServiceMgr/SynchroSellerShop", ReplyAction="http://tempuri.org/IECommerceServiceMgr/SynchroSellerShopResponse")]
        System.Data.DataTable SynchroSellerShop(string nick, string appkey, string appsecret, string sessionkey, string serverUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceServiceMgr/SynchroLogisticsCompanies", ReplyAction="http://tempuri.org/IECommerceServiceMgr/SynchroLogisticsCompaniesResponse")]
        System.Data.DataTable SynchroLogisticsCompanies(string nick);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceServiceMgr/SynchroAreas", ReplyAction="http://tempuri.org/IECommerceServiceMgr/SynchroAreasResponse")]
        System.Data.DataTable SynchroAreas(string nick);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceServiceMgr/TopatsTradesSoldToTask", ReplyAction="http://tempuri.org/IECommerceServiceMgr/TopatsTradesSoldToTaskResponse")]
        long TopatsTradesSoldToTask(string nick, System.DateTime startCreated, System.DateTime endCreated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceServiceMgr/SynTradesSoldByTaskId", ReplyAction="http://tempuri.org/IECommerceServiceMgr/SynTradesSoldByTaskIdResponse")]
        int SynTradesSoldByTaskId(string nick, long taskId, System.DateTime start_created, System.DateTime end_created);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceServiceMgr/GetTradesSoldIncrement", ReplyAction="http://tempuri.org/IECommerceServiceMgr/GetTradesSoldIncrementResponse")]
        int GetTradesSoldIncrement(string nick, System.DateTime start_modified, System.DateTime end_modified, string status, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceServiceMgr/OnlineCconfirm", ReplyAction="http://tempuri.org/IECommerceServiceMgr/OnlineCconfirmResponse")]
        bool OnlineCconfirm(string nick, long tid, string out_sid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceServiceMgr/OnlineSend", ReplyAction="http://tempuri.org/IECommerceServiceMgr/OnlineSendResponse")]
        string OnlineSend(string nick, long tid, string out_sid, string company_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceServiceMgr/UpdateShopStatus", ReplyAction="http://tempuri.org/IECommerceServiceMgr/UpdateShopStatusResponse")]
        bool UpdateShopStatus(string id, bool stopSetup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceServiceMgr/StartUpdateTrades", ReplyAction="http://tempuri.org/IECommerceServiceMgr/StartUpdateTradesResponse")]
        bool StartUpdateTrades(int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceServiceMgr/StopUpdateTrades", ReplyAction="http://tempuri.org/IECommerceServiceMgr/StopUpdateTradesResponse")]
        void StopUpdateTrades(int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceServiceMgr/CloseTradeSingle", ReplyAction="http://tempuri.org/IECommerceServiceMgr/CloseTradeSingleResponse")]
        string CloseTradeSingle(string nick, long tid, string tradeCloseReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceServiceMgr/UpdateTradeMemo", ReplyAction="http://tempuri.org/IECommerceServiceMgr/UpdateTradeMemoResponse")]
        string UpdateTradeMemo(string nick, long tid, string memo, int flag, bool isReset);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceServiceMgr/GetFenxiaoOrders", ReplyAction="http://tempuri.org/IECommerceServiceMgr/GetFenxiaoOrdersResponse")]
        int GetFenxiaoOrders(string nick, System.DateTime start_Date, System.DateTime end_Date, string purchaseOrderId, bool IsByCreateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceServiceMgr/CloseFenxiaoOrder", ReplyAction="http://tempuri.org/IECommerceServiceMgr/CloseFenxiaoOrderResponse")]
        string CloseFenxiaoOrder(string nick, long oid, string orderCloseReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceServiceMgr/UpdateFenxiaoOrderRemark", ReplyAction="http://tempuri.org/IECommerceServiceMgr/UpdateFenxiaoOrderRemarkResponse")]
        string UpdateFenxiaoOrderRemark(string nick, long purchaseOrderId, string memo, long flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceServiceMgr/GetRefundsReceive", ReplyAction="http://tempuri.org/IECommerceServiceMgr/GetRefundsReceiveResponse")]
        int GetRefundsReceive(string nick, System.DateTime start_Date, System.DateTime end_Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceServiceMgr/UpdateTaoBaoStock", ReplyAction="http://tempuri.org/IECommerceServiceMgr/UpdateTaoBaoStockResponse")]
        string UpdateTaoBaoStock(string nick, string appkey, string appsecret, string sessionkey, string serverUrl, System.Data.DataTable dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceServiceMgr/GetJdOrderList", ReplyAction="http://tempuri.org/IECommerceServiceMgr/GetJdOrderListResponse")]
        string GetJdOrderList(string appKey, string appSecret, string serverURL, string accessToken, System.DateTime startDate, System.DateTime endDate, string orderState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceServiceMgr/UpdateJdStock", ReplyAction="http://tempuri.org/IECommerceServiceMgr/UpdateJdStockResponse")]
        string UpdateJdStock(string appKey, string appSecret, string serverURL, string accessToken, string outerIdList, string stockList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceServiceMgr/test", ReplyAction="http://tempuri.org/IECommerceServiceMgr/testResponse")]
        string test();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IECommerceServiceMgr/Test2", ReplyAction="http://tempuri.org/IECommerceServiceMgr/Test2Response")]
        string Test2(string msg);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IECommerceServiceMgrChannel : Common.ServiceECommerce.IECommerceServiceMgr, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ECommerceServiceMgrClient : System.ServiceModel.ClientBase<Common.ServiceECommerce.IECommerceServiceMgr>, Common.ServiceECommerce.IECommerceServiceMgr {
        
        public ECommerceServiceMgrClient() {
        }
        
        public ECommerceServiceMgrClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ECommerceServiceMgrClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ECommerceServiceMgrClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ECommerceServiceMgrClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool StartSession(string userCode, string IP) {
            return base.Channel.StartSession(userCode, IP);
        }
        
        public System.Data.DataTable SynchroSellerShop(string nick, string appkey, string appsecret, string sessionkey, string serverUrl) {
            return base.Channel.SynchroSellerShop(nick, appkey, appsecret, sessionkey, serverUrl);
        }
        
        public System.Data.DataTable SynchroLogisticsCompanies(string nick) {
            return base.Channel.SynchroLogisticsCompanies(nick);
        }
        
        public System.Data.DataTable SynchroAreas(string nick) {
            return base.Channel.SynchroAreas(nick);
        }
        
        public long TopatsTradesSoldToTask(string nick, System.DateTime startCreated, System.DateTime endCreated) {
            return base.Channel.TopatsTradesSoldToTask(nick, startCreated, endCreated);
        }
        
        public int SynTradesSoldByTaskId(string nick, long taskId, System.DateTime start_created, System.DateTime end_created) {
            return base.Channel.SynTradesSoldByTaskId(nick, taskId, start_created, end_created);
        }
        
        public int GetTradesSoldIncrement(string nick, System.DateTime start_modified, System.DateTime end_modified, string status, string type) {
            return base.Channel.GetTradesSoldIncrement(nick, start_modified, end_modified, status, type);
        }
        
        public bool OnlineCconfirm(string nick, long tid, string out_sid) {
            return base.Channel.OnlineCconfirm(nick, tid, out_sid);
        }
        
        public string OnlineSend(string nick, long tid, string out_sid, string company_code) {
            return base.Channel.OnlineSend(nick, tid, out_sid, company_code);
        }
        
        public bool UpdateShopStatus(string id, bool stopSetup) {
            return base.Channel.UpdateShopStatus(id, stopSetup);
        }
        
        public bool StartUpdateTrades(int type) {
            return base.Channel.StartUpdateTrades(type);
        }
        
        public void StopUpdateTrades(int type) {
            base.Channel.StopUpdateTrades(type);
        }
        
        public string CloseTradeSingle(string nick, long tid, string tradeCloseReason) {
            return base.Channel.CloseTradeSingle(nick, tid, tradeCloseReason);
        }
        
        public string UpdateTradeMemo(string nick, long tid, string memo, int flag, bool isReset) {
            return base.Channel.UpdateTradeMemo(nick, tid, memo, flag, isReset);
        }
        
        public int GetFenxiaoOrders(string nick, System.DateTime start_Date, System.DateTime end_Date, string purchaseOrderId, bool IsByCreateTime) {
            return base.Channel.GetFenxiaoOrders(nick, start_Date, end_Date, purchaseOrderId, IsByCreateTime);
        }
        
        public string CloseFenxiaoOrder(string nick, long oid, string orderCloseReason) {
            return base.Channel.CloseFenxiaoOrder(nick, oid, orderCloseReason);
        }
        
        public string UpdateFenxiaoOrderRemark(string nick, long purchaseOrderId, string memo, long flag) {
            return base.Channel.UpdateFenxiaoOrderRemark(nick, purchaseOrderId, memo, flag);
        }
        
        public int GetRefundsReceive(string nick, System.DateTime start_Date, System.DateTime end_Date) {
            return base.Channel.GetRefundsReceive(nick, start_Date, end_Date);
        }
        
        public string UpdateTaoBaoStock(string nick, string appkey, string appsecret, string sessionkey, string serverUrl, System.Data.DataTable dt) {
            return base.Channel.UpdateTaoBaoStock(nick, appkey, appsecret, sessionkey, serverUrl, dt);
        }
        
        public string GetJdOrderList(string appKey, string appSecret, string serverURL, string accessToken, System.DateTime startDate, System.DateTime endDate, string orderState) {
            return base.Channel.GetJdOrderList(appKey, appSecret, serverURL, accessToken, startDate, endDate, orderState);
        }
        
        public string UpdateJdStock(string appKey, string appSecret, string serverURL, string accessToken, string outerIdList, string stockList) {
            return base.Channel.UpdateJdStock(appKey, appSecret, serverURL, accessToken, outerIdList, stockList);
        }
        
        public string test() {
            return base.Channel.test();
        }
        
        public string Test2(string msg) {
            return base.Channel.Test2(msg);
        }
    }
}
