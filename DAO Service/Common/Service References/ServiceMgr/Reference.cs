//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1008
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.ServiceMgr {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SessionInfo", Namespace="http://schemas.datacontract.org/2004/07/BllService")]
    [System.SerializableAttribute()]
    public partial class SessionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastActivityTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostName {
            get {
                return this.HostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HostNameField, value) != true)) {
                    this.HostNameField = value;
                    this.RaisePropertyChanged("HostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastActivityTime {
            get {
                return this.LastActivityTimeField;
            }
            set {
                if ((this.LastActivityTimeField.Equals(value) != true)) {
                    this.LastActivityTimeField = value;
                    this.RaisePropertyChanged("LastActivityTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIDField, value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserCode {
            get {
                return this.UserCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserCodeField, value) != true)) {
                    this.UserCodeField = value;
                    this.RaisePropertyChanged("UserCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceMgr.IServiceMgr", CallbackContract=typeof(Common.ServiceMgr.IServiceMgrCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IServiceMgr {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceMgr/SessionKilled")]
        void SessionKilled(string[] userCodes);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceMgr/RepeatSessionKilled")]
        void RepeatSessionKilled(Common.ServiceMgr.SessionInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMgr/SessionTimeout", ReplyAction="http://tempuri.org/IServiceMgr/SessionTimeoutResponse")]
        void SessionTimeout(string userCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceMgr/RegisterSession")]
        void RegisterSession(Common.ServiceMgr.SessionInfo info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMgr/GetActiveSessions", ReplyAction="http://tempuri.org/IServiceMgr/GetActiveSessionsResponse")]
        Common.ServiceMgr.SessionInfo[] GetActiveSessions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMgr/AddWarningTable", ReplyAction="http://tempuri.org/IServiceMgr/AddWarningTableResponse")]
        void AddWarningTable(System.Data.DataTable dtWarnTable);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceMgrCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceMgr/OnSessionKilled")]
        void OnSessionKilled(Common.ServiceMgr.SessionInfo sessionInfo, string msg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceMgr/OnSessionTimeout")]
        void OnSessionTimeout(Common.ServiceMgr.SessionInfo sessionInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMgr/OnRepeatLogin", ReplyAction="http://tempuri.org/IServiceMgr/OnRepeatLoginResponse")]
        void OnRepeatLogin(Common.ServiceMgr.SessionInfo sessionInfo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceMgrChannel : Common.ServiceMgr.IServiceMgr, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceMgrClient : System.ServiceModel.DuplexClientBase<Common.ServiceMgr.IServiceMgr>, Common.ServiceMgr.IServiceMgr {
        
        public ServiceMgrClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServiceMgrClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServiceMgrClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceMgrClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceMgrClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void SessionKilled(string[] userCodes) {
            base.Channel.SessionKilled(userCodes);
        }
        
        public void RepeatSessionKilled(Common.ServiceMgr.SessionInfo info) {
            base.Channel.RepeatSessionKilled(info);
        }
        
        public void SessionTimeout(string userCode) {
            base.Channel.SessionTimeout(userCode);
        }
        
        public void RegisterSession(Common.ServiceMgr.SessionInfo info) {
            base.Channel.RegisterSession(info);
        }
        
        public Common.ServiceMgr.SessionInfo[] GetActiveSessions() {
            return base.Channel.GetActiveSessions();
        }
        
        public void AddWarningTable(System.Data.DataTable dtWarnTable) {
            base.Channel.AddWarningTable(dtWarnTable);
        }
    }
}
